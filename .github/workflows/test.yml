name: Test

on: [pull_request, workflow_dispatch]

defaults:
  run:
    shell: bash

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
        poetry-version: ['1.7.1']
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pipx
        run: python -m pip install pipx

      - name: Install poetry
        run: pipx install poetry==${{ matrix.poetry-version }}

      - name: Setup a local virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - uses: actions/cache@v3
        name: Define a cache for the venv based on the dependencies lock file
        with:
          path: ./.venv
          key: poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            poetry-
          enableCrossOsArchive: true

      - name: Install the project dependencies
        run: poetry install --without dev,docs

      - name: Run juicenet
        run: |
          poetry run python -m juicenet --help
          poetry run python -m juicenet --version

      - name: Build
        run: poetry build

      - name: Get version
        id: version
        run: echo "version=$(poetry run python -m juicenet --version)" >> $GITHUB_OUTPUT

      - name: Install juicenet
        run: pipx install dist/juicenet_cli-${{ steps.version.outputs.version }}-py3-none-any.whl

      - name: Run juicenet
        run: |
          juicenet --help
          juicenet --version

      - uses: actions/upload-artifact@v3
        with:
          name: juicenet-cli-${{ steps.version.outputs.version }}-${{ matrix.python-version }}-${{ matrix.os }}
          path: "dist/*"
